# goTApaper configuration file
#
# this is a YAML 1.2 document, for details about its format, refer to: https://yaml.org/
#
# Strategy:
#   Wallpaper sources normally offer different sizes of a picture for different screen resolutions. The strategy
# is a hint for the fittest picture.
#   Currently following values can be used as strategy:
#     *  largest-no-logo: the largest watermark-free version of picture, meaningful to Bing channel only, other channels
#        don't add watermark to images
#     *  largest: always use the highest resolution
#     *  by-width: specify the width of image explicitly, must be used with a "width" option. the height of picture is
#        calculated automatically to retain the ratio of image

---
# path and basename of downloaded wallpaper file. Do NOT include extension name
# in this setting for which is automatically decided by channels
wallpaper-file-name: ~/.goTApaper/wallpaper

# full path to history file
history-file: ~/.goTApaper/history.json

# language for application outputs
language: en-us

# enable verbose debug log
debug: false

# can be one of "direct", "environment"(Linux Only), or a url of proxy server like
#     SCHEME://USERNAME:PASSWORD@HOST:PORT
#     (e.g. socks5://127.0.0.1:1080).
proxy: direct

# settings for the daemon command
daemon:
  # seconds to sleep between two adjoined background refresh
  interval: 3600

# watermark can be added to the downloaded picture
# multiple watermarks can be enabled simutaneously
watermark:
  -
    # name of the font file to be used for watermark
    # it can be an absolute file path or a name of the font file (NOT the name
    # of font family) in which case font will be searched in system font paths:
    #   Win:
    #     %WINDIR%/Fonts,
    #     %LOCALAPPDATA%/Microsoft/Windows/Fonts
    #   Linux/Unix:
    #     ~/.fonts, $XDG_DATA_HOME/.fonts, ~/.local/share/fonts,
    #     /usr/local/share/fonts/, /usr/share/fonts/ and fonts directories under
    #     each dir in $XDG_DATA_DIRS
    #   MacOS (Darwin):
    #     ~/Library/Fonts/, /Library/Fonts/, /System/Library/Fonts/
    # ONLY TrueType font (*.ttf) supported!
    font: NotoSans-Regular.ttf

    # point size of the font
    point: 12

    # color of the watermark in 6 hexadecimal (rrggbb) or 8 hexadecimal
    # (rrggbbaa) notation. remember to wrap the value in quotes when it only
    # contains digitals (e.g. "11223344") or yaml parser will interpret it as
    # an integer
    color: 1111117f

    # position of watermark lines, can be one of top-left, top-center,
    # top-right middle-left, middle-center, middle-right, bottom-left,
    # bottom-center, bottom-right
    position: bottom-right

    # Horizontal/vertical padding, offset to left-or-right/top-or-bottom edge
    # of the picture
    # The hPadding not applicable to *-center positions, likewise the vPadding
    # not applicable to middle-* positions. they will be ignored without any
    # error in that cases.
    # If a float less than 1 is specified for padding, it will be interpreted
    # as relative percentage of the width (for hPadding) or height (for
    # vPadding) of the picture; otherwise it will be used directly as pixel
    # number
    hPadding: 0.01
    vPadding: 0.1

    # Space height between each two lines. Relative to font height.
    linespace: 1.2

    # Alignment of lines. It can be left, center or right
    alignment: right
    # Golang Template used to generate watermark, can contain multiple lines.
    # refer to https://golang.org/pkg/text/template/ for golang template syntax
    # fields can be used in the template:
    #   Title string: title of the wallpaper.
    #   Credit string: credit info or name of uploader
    #   UploadTime time: when is the wallpaper uploaded
    #   DownloadTime time: when is the wallpaper downloaded
    template: |
      {{.Title}} ({{.Credit}})
      @{{.UploadTime.Format "2006 Jan 2 15:04:05"}}

# The active-channels is a list containing keys of enabled channel definitions.
# Items can either be plain string names which enable corresponding channels
# in every refreshing executions or name-probability maps (map[string]float)
# which enable the corresponding channel subjected to the specified probability.
# The probability should be in range of [0, 1] which stands for never and always
# respectively.
#
# Using probabilities less <1.0 is recommended for those channel types which always
# return a new photo (e.g. unsplash) at every request so that other channels
# following it can get a chance to run.
#
# Probability of the last active channel in this list will always be considered
# as 1 to guarantee at least one detection in each refreshing, hence its user
# setting will be ignored.
active-channels:
  - ng
  - bing
  # 50% chance to run unsplash with the search keyword "color"
  # - unsplash-kw-color: 0.5
  # as last item it will always be run no matter what probability set here
  # - unsplash-kw-water

# unsplash channels share a lot of common settings so gather them into a
# reusable section with anchor to take advantage of YAML map merging,
# see https://yaml.org/type/merge.html
unsplash-common-settings: &unsplash-common-settings
  # unsplash downloads with its random picture API, read its doc here:
  #     https://unsplash.com/documentation#get-a-random-photo
  # NOTE: you'll need an API key to download from unsplash. Get your key according
  # to this doc: https://unsplash.com/documentation#creating-a-developer-account
  # NO, I cannot offer one according to unsplash's API guideline here:
  # https://help.unsplash.com/en/articles/2511245-unsplash-api-guidelines
  type: unsplash
  # set your key here
  key: unsplash-api-key-id

  # supported strategy:
  # - by-width (recommended, remember to set the width also)
  # - other strategies all download raw links without any scaling
  strategy: by-width
  width: 1920
  # one of landscape, portrait, or squarish, read the unsplash API doc for details
  orientation: landscape
  # limit selection to featured photos
  # read the unsplash API doc for details
  featured: yes
  image_parameters:
    # parameters to be appended to unsplash picture link, can be used to modify
    # image size or quality.
    # read https://unsplash.com/documentation#supported-parameters for details
    #
    # please be noted that 'by-width' strategy actually use "w=" parameter for
    # photo resizing so the width option will be overridden if a "w" parameter
    # explicitly specified here
    q: 100
    dpr: 2

# channel definitions. read comments of each channel type for details
channels:
  ng:
    # ng-photo-of-today downloads picture from national geographic "photo of the
    # day" column
    # (https://www.nationalgeographic.com/photography/photo-of-the-day/)
    type: ng-photo-of-today
    # supported strategy:
    # - largest (recommended)
    # - largest-no-logo (same as largest as ng never embeds logo into its photo)
    # - by-width
    strategy: largest

  bing:
    # bing-wallpaper downloads picture from Bing.com background
    # (https://www.bing.com)
    type: bing-wallpaper
    # supported strategies:
    # - largest-no-logo (recommended)
    # - largest (use this for better resolution if you can live with the "Bing"
    #            logo. sometimes same as largest-no-logo if the photo that day
    #            does not have a logo-ed hires wallpaper version)
    # - by-width
    strategy: largest-no-logo

  unsplash-kw-color:
    <<: *unsplash-common-settings
    # keyword used for photo searching
    query: color

  # you can define multiple instances of same type with different parameters
  unsplash-kw-water:
    <<: *unsplash-common-settings
    query: water

